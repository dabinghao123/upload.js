!function(a,b){"function"==typeof define&&define.amd?define("upload",["jquery"],function(c){return a.Upload=b(c)}):"object"==typeof exports?module.exports=b(require("jquery")):a.Upload=b(jQuery)}(this,function($){function Upload(a,b){var c=this;if(this.fileInput=a,"INPUT"!==a.tagName||"file"!==a.type)throw Error("Upload must be applied to input of file type");if(this.container=a.parentNode,this.options=helper.extend({},{onchoose:function(){},oninvalidfile:function(a){},onsuccess:function(a){},onerror:function(a){},onbeforeupload:function(){},onafterupload:function(){},onprogress:function(a,b){},allowedFormats:[],maxSize:null,transport:"xhr",crossDomain:null,uploadUrl:null,progressUrl:null,name:"f",autoUpload:!0,multiple:!1},b),this.options.autoUpload&&this.fileInput.addEventListener("change",function(){c.uploadFile.call(c)}),this.options.multiple?a.setAttribute("multiple","multiple"):a.removeAttribute("multiple"),"function"==typeof b.onchoose&&this.fileInput.addEventListener("change",b.onchoose),!this.options.uploadUrl)throw Error("Upload URL not specified");a.setAttribute("name",this.options.name)}var IframeTransport=function(a,b,c,d,e,f,g){this.uuid=helper.generateUUID(),b=helper.appendQueryParams(b,{"X-Progress-ID":this.uuid});var h=document.createElement("iframe");h.src="javascript:void(0);",h.style="display:none;",h.name="iframeUpload",document.body.appendChild(h);var i=document.createElement("form");i.method="post",i.enctype="multipart/form-data",i.action=b,i.target="iframeUpload",i.style="display:none;",document.body.appendChild(i);var j=a.cloneNode(!0),k=a.parentNode;i.appendChild(a),k.appendChild(j),a=j;var l=this;h.addEventListener("load",function(){try{var a=h.contentDocument.body.innerHTML;a=a?JSON.parse(a):{},e.call(l,a)}catch(b){f.call(l,b)}g.call(l),h.parentNode.removeChild(h),i.parentNode.removeChild(i)}),this.checkProgress(d)};IframeTransport.prototype={createIframe:function(){},setProgressUrl:function(a){this.progressUrl=a},checkProgress:function(callback){var self=this;this.progressUrl=helper.appendQueryParams(this.progressUrl,{"X-Progress-ID":this.uuid}),this.xhr=new XMLHttpRequest,this.xhr.open("GET",this.progressUrl,!0),this.xhr.onreadystatechange=function(){if(4===xhr.readyState){var response=eval(responseText);switch(response.state){case"uploading":callback.call(self,response.received,response.size),setTimeout(function(){self.xhr.send(null)},interval)}}},this.xhr.send(null)},send:function(){for(var a=0;a<this.files.length;a++)if(this.beforeUploadCallback.call(this)===!1)return;this.form.submit()}};var XhrTransport=function(a,b,c,d,e,f,g){this.files=a.files,this.name=a.getAttribute("name"),this.uploadUrl=b,this.successCallback=e,this.errorCallback=f,this.beforeUploadCallback=c,this.afterUploadCallback=g,this.progressCallback=d};XhrTransport.prototype={createXhr:function(){var a=this,b=new XMLHttpRequest;return b.onreadystatechange=function(){if(4===b.readyState){try{if(200!==b.status)throw new Error("Server returns error code "+b.status);var c=JSON.parse(b.responseText);a.successCallback.call(a,c)}catch(d){a.errorCallback.call(a,d.message)}a.afterUploadCallback.call(a)}},"upload"in b&&(b.upload.onprogress=function(b){a.progressCallback.call(a,b.loaded,b.total)}),b},send:function(){for(var a=[],b=0;b<this.files.length;b++){if(this.beforeUploadCallback.call(this)===!1)return;a[b]=this.createXhr(),a[b].open("POST",this.uploadUrl,!0),a[b].setRequestHeader("X-Requested-With","XMLHttpRequest");var c=new FormData;c.append(this.name,this.files[b]),a[b].send(c)}}};var helper={extend:function(){for(var a={},b=0;b<arguments.length;b++){var c=arguments[b];for(var d in c)a[d]=c[d]}return a},generateUUID:function(){for(var a="",b=0;32>b;b++)a+=Math.floor(16*Math.random()).toString(16);return a},appendQueryParams:function(a,b){var c=[],d=a.indexOf("?");d>=0&&(c=a.substr(d+1).split("&"),a=a.substr(0,d));for(var e in b)c.push(e+"="+encodeURIComponent(b[e]));return c.length>0&&(a+="?"+c.join("&")),a}};return Upload.prototype={setOption:function(a,b){return this.options[a]=b,this},validate:function(){if(!this.options.multiple&&this.fileInput.files.length>1)throw Error("Multiple upload not allowed");for(var a=0;a<this.fileInput.files.length;a++){var b=this.fileInput.files[a];if(this.options.maxSize&&b.size>this.options.maxSize)throw Error("Size of file not allowed");if(this.options.allowedFormats.length){var c=b.name.substr(b.name.lastIndexOf(".")+1).toLowerCase();if(-1===this.options.allowedFormats.indexOf(c)&&-1===this.options.allowedFormats.indexOf(b.type))throw"Format not allowed"}}},uploadFile:function(){try{this.validate()}catch(a){return void this.options.oninvalidfile.call(this,a)}var b;b="function"==typeof this.options.uploadUrl?this.options.uploadUrl():this.options.uploadUrl;var c;this.options.transport&&-1!==["xhr","iframe"].indexOf(this.options.transport)&&(c=this.options.transport);var d;d="xhr"===c&&"undefined"!=typeof FormData?XhrTransport:IframeTransport;var e=new d(this.fileInput,b,this.options.onbeforeupload,this.options.onprogress,this.options.onsuccess,this.options.onerror,this.options.onafterupload);return"iframe"===c&&e.setProgressUrl(this.options.progressUrl),e.send(),this}},$.fn.upload=function(){var a=this,b=a.get(0);if(arguments.length&&"object"==typeof arguments[0])a.data("selfInstance",new Upload(b,arguments[0]));else{var c=a.data("selfInstance");if(!c)throw new Error("Upload not initialised");c[arguments[0]].apply(c,Array.prototype.slice.call(arguments,1))}},Upload});