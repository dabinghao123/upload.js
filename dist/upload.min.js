!function(a,b){"function"==typeof define&&define.amd?define("upload",["jquery"],function(c){return a.Upload=b(c)}):"object"==typeof exports?module.exports=b(require("jquery")):a.Upload=b(jQuery)}(this,function($){return function($){function uploader(a,b){var c=this;this.fileInput=a,this.options=$.extend({},{crossDomain:null,transport:null,progressHandlerUrl:null,uploadHandlerUrl:null,uploadHandlerParams:function(){},classname:null,onchoose:function(){},onsuccess:function(a){},onerror:function(a){},oninvalidfile:function(a){},onbeforeupload:function(){},onafterupload:function(){},onprogress:function(a,b){},supportedFormats:[],maxSize:null,responseType:"json",fileInputName:a.attr("name")||"f",autoUpload:!0},b),this.container=this.fileInput.parent().css({overflow:"hidden"}),"static"===this.container.css("position")&&this.container.css({position:"relative"}),this.options.classname&&this.container.addClass(this.options.classname),this.fileInput.css({opacity:0,position:"absolute",zIndex:100,top:"0px",right:"0px",fontSize:"200px",padding:"0px",margin:"0px",cursor:"pointer"}),b.autoUpload&&this.fileInput.change(function(){c.uploadFile()}),"function"==typeof b.onchoose&&this.fileInput.change($.proxy(b.onchoose,this)),this.fileInput.appendTo(this.container)}uploader.prototype={VALIDATE_ERROR_SIZE:0,VALIDATE_ERROR_FORMAT:1,isCrossDomain:function(){return null!==this.options.crossDomain?!!this.options.crossDomain:-1===this.options.uploadHandlerUrl.indexOf(location.host)},setOption:function(a,b){return this.options[a]=b,this},setTransport:function(a){return this.options.transport=a,this},setUploadHandlerUrl:function(a){return this.options.uploadHandlerUrl=a,this},_validate:function(){var a=this.fileInput.get(0).files[0];if(this.options.maxSize&&a.size>this.options.maxSize)throw this.VALIDATE_ERROR_SIZE;if(this.options.supportedFormats.length){for(var b=a.name.substr(a.name.lastIndexOf(".")+1),c=!1,d=0;d<this.options.supportedFormats.length;d++)if(b.toLowerCase()===this.options.supportedFormats[d].toLowerCase()){c=!0;break}if(!c)throw this.VALIDATE_ERROR_FORMAT}},uploadFile:function(){try{this._validate()}catch(a){return void this.options.oninvalidfile.call(this,a)}if(this.options.onbeforeupload.call(this)!==!1){if(this.options.transport)this["_"+this.options.transport+"Upload"]();else try{this._xhrUpload()}catch(b){this._formUpload()}return this}},_streamUpload:function(){var self=this,xhr=new XMLHttpRequest;xhr.onreadystatechange=function(){if(4===xhr.readyState){try{if(200!==xhr.status)throw new Error("Server returns error code "+xhr.status);var response=xhr.responseText;"json"===self.options.responseType&&(response=response?eval("("+response+")"):{}),self.options.onsuccess.call(self,response)}catch(e){self.options.onerror.call(self,e.message)}self.options.onafterupload.call(self)}},"upload"in xhr&&(xhr.upload.onprogress=function(a){self.options.onprogress.call(self,a.loaded,a.total)});var file=this.fileInput.get(0).files[0],params={};params[this.options.fileInputName]=file.name;var uri=this._buildUploadHandlerUrl(params);xhr.open("POST",uri,!0),this.isCrossDomain()||(xhr.setRequestHeader("X-Requested-With","XMLHttpRequest"),xhr.setRequestHeader("Content-Type","application/octet-stream")),xhr.send(file)},_xhrUpload:function(){var self=this,xhr=new XMLHttpRequest;xhr.onreadystatechange=function(){if(4===xhr.readyState){try{if(200!==xhr.status)throw new Error("Server returns error code "+xhr.status);var response=xhr.responseText;"json"===self.options.responseType&&(response=response?eval("("+response+")"):{}),self.options.onsuccess.call(self,response)}catch(e){self.options.onerror.call(self,e.message)}self.options.onafterupload.call(self)}},"upload"in xhr?xhr.upload.onprogress=function(a){self.options.onprogress.call(self,a.loaded,a.total)}:setTimeout(self._nginxUpdateProgress,1e3);var uri=this._buildUploadHandlerUrl(),formData=new FormData;formData.append(this.options.fileInputName,this.fileInput.get(0).files[0]),xhr.open("POST",uri,!0),this.isCrossDomain()||xhr.setRequestHeader("X-Requested-With","XMLHttpRequest"),xhr.send(formData)},_formUpload:function(){var additionalRequestParams={};if(-1===this.options.uploadHandlerUrl.indexOf("X-Progress-ID")){for(var uuid="",i=0;32>i;i++)uuid+=Math.floor(16*Math.random()).toString(16);additionalRequestParams["X-Progress-ID"]=uuid}var requestUri=this._buildUploadHandlerUrl(additionalRequestParams),$iframe=$('<iframe src="javascript:void(0);" style="display:none;" name="iframeUpload"></iframe>').appendTo(document.body),$form=$('<form method="post" enctype="multipart/form-data" action="'+requestUri+'" target="iframeUpload" style="display:none;"/>').appendTo(document.body),clonedFileInput=this.fileInput.clone(!0),fileInputParent=this.fileInput.parent();$(this.fileInput).attr("name",this.options.fileInputName).appendTo($form),this.fileInput=clonedFileInput.appendTo(fileInputParent);var self=this;$iframe.load(function(){try{var response=$iframe.contents().find("body").html();"json"===self.options.responseType&&(response=response?eval("("+response+")"):{}),self.options.onsuccess.call(self,response)}catch(e){self.options.onerror.call(self,e)}self.options.onafterupload.call(self),$iframe.remove(),$form.remove()}),setTimeout(self._nginxUpdateProgress,1e3),$form.submit()},_nginxUpdateProgress:function(){var self=this,url=this.options.progressHandlerUrl;-1===url.indexOf("X-Progress-ID")&&(url=this._appendQueryParams(url,{"X-Progress-ID":uuid})),$.get(url,function(responseText){var response=eval(responseText);switch(response.state){case"uploading":this.options.onprogress.call(self,response.received,response.size),setTimeout(self._nginxUpdateProgress,5e3)}})},_buildUploadHandlerUrl:function(a){var b=this.options.uploadHandlerParams();return"undefined"!=typeof a&&(b=$.extend({},b,a)),this._appendQueryParams(this.options.uploadHandlerUrl,b)},_appendQueryParams:function(a,b){var c=[],d=a.indexOf("?");d>=0&&(c=a.substr(d+1).split("&"),a=a.substr(0,d));for(var e in b)c.push(e+"="+encodeURIComponent(b[e]));return c.length>0&&(a+="?"+c.join("&")),a}},$.fn.uploader=function(){var a=$(this);if(arguments.length&&"object"==typeof arguments[0])a.data("selfInstance",new uploader(a,arguments[0]));else{var b=a.data("selfInstance");if(!b)throw new Error("Uploader not initialised");if(!arguments.length)return b;b[arguments[0]].apply(b,Array.prototype.slice.call(arguments,1))}},"function"==typeof define&&define.amd&&define([],function(){return uploader})}(jQuery),Upload});